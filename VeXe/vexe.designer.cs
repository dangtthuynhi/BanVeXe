#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VeXe
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="vexe")]
	public partial class vexeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGhe(Ghe instance);
    partial void UpdateGhe(Ghe instance);
    partial void DeleteGhe(Ghe instance);
    partial void InsertKhachhang(Khachhang instance);
    partial void UpdateKhachhang(Khachhang instance);
    partial void DeleteKhachhang(Khachhang instance);
    partial void InsertLotrinh(Lotrinh instance);
    partial void UpdateLotrinh(Lotrinh instance);
    partial void DeleteLotrinh(Lotrinh instance);
    partial void InsertTuyen(Tuyen instance);
    partial void UpdateTuyen(Tuyen instance);
    partial void DeleteTuyen(Tuyen instance);
    partial void InsertVe(Ve instance);
    partial void UpdateVe(Ve instance);
    partial void DeleteVe(Ve instance);
    partial void InsertXe(Xe instance);
    partial void UpdateXe(Xe instance);
    partial void DeleteXe(Xe instance);
    partial void InsertTaikhoan(Taikhoan instance);
    partial void UpdateTaikhoan(Taikhoan instance);
    partial void DeleteTaikhoan(Taikhoan instance);
    #endregion
		
		public vexeDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["vexeConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public vexeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public vexeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public vexeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public vexeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Ghe> Ghes
		{
			get
			{
				return this.GetTable<Ghe>();
			}
		}
		
		public System.Data.Linq.Table<Khachhang> Khachhangs
		{
			get
			{
				return this.GetTable<Khachhang>();
			}
		}
		
		public System.Data.Linq.Table<Lotrinh> Lotrinhs
		{
			get
			{
				return this.GetTable<Lotrinh>();
			}
		}
		
		public System.Data.Linq.Table<Tuyen> Tuyens
		{
			get
			{
				return this.GetTable<Tuyen>();
			}
		}
		
		public System.Data.Linq.Table<Ve> Ves
		{
			get
			{
				return this.GetTable<Ve>();
			}
		}
		
		public System.Data.Linq.Table<Xe> Xes
		{
			get
			{
				return this.GetTable<Xe>();
			}
		}
		
		public System.Data.Linq.Table<Taikhoan> Taikhoans
		{
			get
			{
				return this.GetTable<Taikhoan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ghe")]
	public partial class Ghe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maghe;
		
		private string _soghe;
		
		private string _maxe;
		
		private EntitySet<Ve> _Ves;
		
		private EntityRef<Xe> _Xe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmagheChanging(string value);
    partial void OnmagheChanged();
    partial void OnsogheChanging(string value);
    partial void OnsogheChanged();
    partial void OnmaxeChanging(string value);
    partial void OnmaxeChanged();
    #endregion
		
		public Ghe()
		{
			this._Ves = new EntitySet<Ve>(new Action<Ve>(this.attach_Ves), new Action<Ve>(this.detach_Ves));
			this._Xe = default(EntityRef<Xe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maghe", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maghe
		{
			get
			{
				return this._maghe;
			}
			set
			{
				if ((this._maghe != value))
				{
					this.OnmagheChanging(value);
					this.SendPropertyChanging();
					this._maghe = value;
					this.SendPropertyChanged("maghe");
					this.OnmagheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soghe", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string soghe
		{
			get
			{
				return this._soghe;
			}
			set
			{
				if ((this._soghe != value))
				{
					this.OnsogheChanging(value);
					this.SendPropertyChanging();
					this._soghe = value;
					this.SendPropertyChanged("soghe");
					this.OnsogheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxe", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string maxe
		{
			get
			{
				return this._maxe;
			}
			set
			{
				if ((this._maxe != value))
				{
					if (this._Xe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaxeChanging(value);
					this.SendPropertyChanging();
					this._maxe = value;
					this.SendPropertyChanged("maxe");
					this.OnmaxeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ghe_Ve", Storage="_Ves", ThisKey="maghe", OtherKey="maghe")]
		public EntitySet<Ve> Ves
		{
			get
			{
				return this._Ves;
			}
			set
			{
				this._Ves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xe_Ghe", Storage="_Xe", ThisKey="maxe", OtherKey="maxe", IsForeignKey=true)]
		public Xe Xe
		{
			get
			{
				return this._Xe.Entity;
			}
			set
			{
				Xe previousValue = this._Xe.Entity;
				if (((previousValue != value) 
							|| (this._Xe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Xe.Entity = null;
						previousValue.Ghes.Remove(this);
					}
					this._Xe.Entity = value;
					if ((value != null))
					{
						value.Ghes.Add(this);
						this._maxe = value.maxe;
					}
					else
					{
						this._maxe = default(string);
					}
					this.SendPropertyChanged("Xe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.Ghe = this;
		}
		
		private void detach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.Ghe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Khachhang")]
	public partial class Khachhang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _makh;
		
		private string _tenkh;
		
		private string _sdt;
		
		private string _email;
		
		private string _diachi;
		
		private EntitySet<Ve> _Ves;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmakhChanging(string value);
    partial void OnmakhChanged();
    partial void OntenkhChanging(string value);
    partial void OntenkhChanged();
    partial void OnsdtChanging(string value);
    partial void OnsdtChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OndiachiChanging(string value);
    partial void OndiachiChanged();
    #endregion
		
		public Khachhang()
		{
			this._Ves = new EntitySet<Ve>(new Action<Ve>(this.attach_Ves), new Action<Ve>(this.detach_Ves));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_makh", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string makh
		{
			get
			{
				return this._makh;
			}
			set
			{
				if ((this._makh != value))
				{
					this.OnmakhChanging(value);
					this.SendPropertyChanging();
					this._makh = value;
					this.SendPropertyChanged("makh");
					this.OnmakhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenkh", DbType="NVarChar(50)")]
		public string tenkh
		{
			get
			{
				return this._tenkh;
			}
			set
			{
				if ((this._tenkh != value))
				{
					this.OntenkhChanging(value);
					this.SendPropertyChanging();
					this._tenkh = value;
					this.SendPropertyChanged("tenkh");
					this.OntenkhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sdt", DbType="VarChar(15)")]
		public string sdt
		{
			get
			{
				return this._sdt;
			}
			set
			{
				if ((this._sdt != value))
				{
					this.OnsdtChanging(value);
					this.SendPropertyChanging();
					this._sdt = value;
					this.SendPropertyChanged("sdt");
					this.OnsdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(20)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diachi", DbType="NVarChar(70)")]
		public string diachi
		{
			get
			{
				return this._diachi;
			}
			set
			{
				if ((this._diachi != value))
				{
					this.OndiachiChanging(value);
					this.SendPropertyChanging();
					this._diachi = value;
					this.SendPropertyChanged("diachi");
					this.OndiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khachhang_Ve", Storage="_Ves", ThisKey="makh", OtherKey="makh")]
		public EntitySet<Ve> Ves
		{
			get
			{
				return this._Ves;
			}
			set
			{
				this._Ves.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.Khachhang = this;
		}
		
		private void detach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.Khachhang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lotrinh")]
	public partial class Lotrinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _malotrinh;
		
		private string _maxe;
		
		private string _matuyen;
		
		private System.Nullable<System.DateTime> _thoigian;
		
		private System.Nullable<decimal> _gia;
		
		private EntitySet<Ve> _Ves;
		
		private EntityRef<Tuyen> _Tuyen;
		
		private EntityRef<Xe> _Xe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmalotrinhChanging(string value);
    partial void OnmalotrinhChanged();
    partial void OnmaxeChanging(string value);
    partial void OnmaxeChanged();
    partial void OnmatuyenChanging(string value);
    partial void OnmatuyenChanged();
    partial void OnthoigianChanging(System.Nullable<System.DateTime> value);
    partial void OnthoigianChanged();
    partial void OngiaChanging(System.Nullable<decimal> value);
    partial void OngiaChanged();
    #endregion
		
		public Lotrinh()
		{
			this._Ves = new EntitySet<Ve>(new Action<Ve>(this.attach_Ves), new Action<Ve>(this.detach_Ves));
			this._Tuyen = default(EntityRef<Tuyen>);
			this._Xe = default(EntityRef<Xe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_malotrinh", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string malotrinh
		{
			get
			{
				return this._malotrinh;
			}
			set
			{
				if ((this._malotrinh != value))
				{
					this.OnmalotrinhChanging(value);
					this.SendPropertyChanging();
					this._malotrinh = value;
					this.SendPropertyChanged("malotrinh");
					this.OnmalotrinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxe", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string maxe
		{
			get
			{
				return this._maxe;
			}
			set
			{
				if ((this._maxe != value))
				{
					if (this._Xe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaxeChanging(value);
					this.SendPropertyChanging();
					this._maxe = value;
					this.SendPropertyChanged("maxe");
					this.OnmaxeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matuyen", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string matuyen
		{
			get
			{
				return this._matuyen;
			}
			set
			{
				if ((this._matuyen != value))
				{
					if (this._Tuyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmatuyenChanging(value);
					this.SendPropertyChanging();
					this._matuyen = value;
					this.SendPropertyChanged("matuyen");
					this.OnmatuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thoigian", DbType="DateTime")]
		public System.Nullable<System.DateTime> thoigian
		{
			get
			{
				return this._thoigian;
			}
			set
			{
				if ((this._thoigian != value))
				{
					this.OnthoigianChanging(value);
					this.SendPropertyChanging();
					this._thoigian = value;
					this.SendPropertyChanged("thoigian");
					this.OnthoigianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gia", DbType="Money")]
		public System.Nullable<decimal> gia
		{
			get
			{
				return this._gia;
			}
			set
			{
				if ((this._gia != value))
				{
					this.OngiaChanging(value);
					this.SendPropertyChanging();
					this._gia = value;
					this.SendPropertyChanged("gia");
					this.OngiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lotrinh_Ve", Storage="_Ves", ThisKey="malotrinh", OtherKey="malotrinh")]
		public EntitySet<Ve> Ves
		{
			get
			{
				return this._Ves;
			}
			set
			{
				this._Ves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tuyen_Lotrinh", Storage="_Tuyen", ThisKey="matuyen", OtherKey="matuyen", IsForeignKey=true)]
		public Tuyen Tuyen
		{
			get
			{
				return this._Tuyen.Entity;
			}
			set
			{
				Tuyen previousValue = this._Tuyen.Entity;
				if (((previousValue != value) 
							|| (this._Tuyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tuyen.Entity = null;
						previousValue.Lotrinhs.Remove(this);
					}
					this._Tuyen.Entity = value;
					if ((value != null))
					{
						value.Lotrinhs.Add(this);
						this._matuyen = value.matuyen;
					}
					else
					{
						this._matuyen = default(string);
					}
					this.SendPropertyChanged("Tuyen");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xe_Lotrinh", Storage="_Xe", ThisKey="maxe", OtherKey="maxe", IsForeignKey=true)]
		public Xe Xe
		{
			get
			{
				return this._Xe.Entity;
			}
			set
			{
				Xe previousValue = this._Xe.Entity;
				if (((previousValue != value) 
							|| (this._Xe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Xe.Entity = null;
						previousValue.Lotrinhs.Remove(this);
					}
					this._Xe.Entity = value;
					if ((value != null))
					{
						value.Lotrinhs.Add(this);
						this._maxe = value.maxe;
					}
					else
					{
						this._maxe = default(string);
					}
					this.SendPropertyChanged("Xe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.Lotrinh = this;
		}
		
		private void detach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.Lotrinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tuyen")]
	public partial class Tuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _matuyen;
		
		private string _noibatdau;
		
		private string _noiketthuc;
		
		private EntitySet<Lotrinh> _Lotrinhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmatuyenChanging(string value);
    partial void OnmatuyenChanged();
    partial void OnnoibatdauChanging(string value);
    partial void OnnoibatdauChanged();
    partial void OnnoiketthucChanging(string value);
    partial void OnnoiketthucChanged();
    #endregion
		
		public Tuyen()
		{
			this._Lotrinhs = new EntitySet<Lotrinh>(new Action<Lotrinh>(this.attach_Lotrinhs), new Action<Lotrinh>(this.detach_Lotrinhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matuyen", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string matuyen
		{
			get
			{
				return this._matuyen;
			}
			set
			{
				if ((this._matuyen != value))
				{
					this.OnmatuyenChanging(value);
					this.SendPropertyChanging();
					this._matuyen = value;
					this.SendPropertyChanged("matuyen");
					this.OnmatuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noibatdau", DbType="NVarChar(50)")]
		public string noibatdau
		{
			get
			{
				return this._noibatdau;
			}
			set
			{
				if ((this._noibatdau != value))
				{
					this.OnnoibatdauChanging(value);
					this.SendPropertyChanging();
					this._noibatdau = value;
					this.SendPropertyChanged("noibatdau");
					this.OnnoibatdauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noiketthuc", DbType="NVarChar(50)")]
		public string noiketthuc
		{
			get
			{
				return this._noiketthuc;
			}
			set
			{
				if ((this._noiketthuc != value))
				{
					this.OnnoiketthucChanging(value);
					this.SendPropertyChanging();
					this._noiketthuc = value;
					this.SendPropertyChanged("noiketthuc");
					this.OnnoiketthucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tuyen_Lotrinh", Storage="_Lotrinhs", ThisKey="matuyen", OtherKey="matuyen")]
		public EntitySet<Lotrinh> Lotrinhs
		{
			get
			{
				return this._Lotrinhs;
			}
			set
			{
				this._Lotrinhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lotrinhs(Lotrinh entity)
		{
			this.SendPropertyChanging();
			entity.Tuyen = this;
		}
		
		private void detach_Lotrinhs(Lotrinh entity)
		{
			this.SendPropertyChanging();
			entity.Tuyen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ve")]
	public partial class Ve : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _mave;
		
		private string _maghe;
		
		private string _malotrinh;
		
		private string _makh;
		
		private EntityRef<Ghe> _Ghe;
		
		private EntityRef<Khachhang> _Khachhang;
		
		private EntityRef<Lotrinh> _Lotrinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaveChanging(string value);
    partial void OnmaveChanged();
    partial void OnmagheChanging(string value);
    partial void OnmagheChanged();
    partial void OnmalotrinhChanging(string value);
    partial void OnmalotrinhChanged();
    partial void OnmakhChanging(string value);
    partial void OnmakhChanged();
    #endregion
		
		public Ve()
		{
			this._Ghe = default(EntityRef<Ghe>);
			this._Khachhang = default(EntityRef<Khachhang>);
			this._Lotrinh = default(EntityRef<Lotrinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mave", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mave
		{
			get
			{
				return this._mave;
			}
			set
			{
				if ((this._mave != value))
				{
					this.OnmaveChanging(value);
					this.SendPropertyChanging();
					this._mave = value;
					this.SendPropertyChanged("mave");
					this.OnmaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maghe", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string maghe
		{
			get
			{
				return this._maghe;
			}
			set
			{
				if ((this._maghe != value))
				{
					if (this._Ghe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmagheChanging(value);
					this.SendPropertyChanging();
					this._maghe = value;
					this.SendPropertyChanged("maghe");
					this.OnmagheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_malotrinh", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string malotrinh
		{
			get
			{
				return this._malotrinh;
			}
			set
			{
				if ((this._malotrinh != value))
				{
					if (this._Lotrinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmalotrinhChanging(value);
					this.SendPropertyChanging();
					this._malotrinh = value;
					this.SendPropertyChanged("malotrinh");
					this.OnmalotrinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_makh", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string makh
		{
			get
			{
				return this._makh;
			}
			set
			{
				if ((this._makh != value))
				{
					if (this._Khachhang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmakhChanging(value);
					this.SendPropertyChanging();
					this._makh = value;
					this.SendPropertyChanged("makh");
					this.OnmakhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ghe_Ve", Storage="_Ghe", ThisKey="maghe", OtherKey="maghe", IsForeignKey=true)]
		public Ghe Ghe
		{
			get
			{
				return this._Ghe.Entity;
			}
			set
			{
				Ghe previousValue = this._Ghe.Entity;
				if (((previousValue != value) 
							|| (this._Ghe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ghe.Entity = null;
						previousValue.Ves.Remove(this);
					}
					this._Ghe.Entity = value;
					if ((value != null))
					{
						value.Ves.Add(this);
						this._maghe = value.maghe;
					}
					else
					{
						this._maghe = default(string);
					}
					this.SendPropertyChanged("Ghe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khachhang_Ve", Storage="_Khachhang", ThisKey="makh", OtherKey="makh", IsForeignKey=true)]
		public Khachhang Khachhang
		{
			get
			{
				return this._Khachhang.Entity;
			}
			set
			{
				Khachhang previousValue = this._Khachhang.Entity;
				if (((previousValue != value) 
							|| (this._Khachhang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khachhang.Entity = null;
						previousValue.Ves.Remove(this);
					}
					this._Khachhang.Entity = value;
					if ((value != null))
					{
						value.Ves.Add(this);
						this._makh = value.makh;
					}
					else
					{
						this._makh = default(string);
					}
					this.SendPropertyChanged("Khachhang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lotrinh_Ve", Storage="_Lotrinh", ThisKey="malotrinh", OtherKey="malotrinh", IsForeignKey=true)]
		public Lotrinh Lotrinh
		{
			get
			{
				return this._Lotrinh.Entity;
			}
			set
			{
				Lotrinh previousValue = this._Lotrinh.Entity;
				if (((previousValue != value) 
							|| (this._Lotrinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lotrinh.Entity = null;
						previousValue.Ves.Remove(this);
					}
					this._Lotrinh.Entity = value;
					if ((value != null))
					{
						value.Ves.Add(this);
						this._malotrinh = value.malotrinh;
					}
					else
					{
						this._malotrinh = default(string);
					}
					this.SendPropertyChanged("Lotrinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Xe")]
	public partial class Xe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maxe;
		
		private string _bienso;
		
		private EntitySet<Ghe> _Ghes;
		
		private EntitySet<Lotrinh> _Lotrinhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaxeChanging(string value);
    partial void OnmaxeChanged();
    partial void OnbiensoChanging(string value);
    partial void OnbiensoChanged();
    #endregion
		
		public Xe()
		{
			this._Ghes = new EntitySet<Ghe>(new Action<Ghe>(this.attach_Ghes), new Action<Ghe>(this.detach_Ghes));
			this._Lotrinhs = new EntitySet<Lotrinh>(new Action<Lotrinh>(this.attach_Lotrinhs), new Action<Lotrinh>(this.detach_Lotrinhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxe", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maxe
		{
			get
			{
				return this._maxe;
			}
			set
			{
				if ((this._maxe != value))
				{
					this.OnmaxeChanging(value);
					this.SendPropertyChanging();
					this._maxe = value;
					this.SendPropertyChanged("maxe");
					this.OnmaxeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bienso", DbType="NChar(10)")]
		public string bienso
		{
			get
			{
				return this._bienso;
			}
			set
			{
				if ((this._bienso != value))
				{
					this.OnbiensoChanging(value);
					this.SendPropertyChanging();
					this._bienso = value;
					this.SendPropertyChanged("bienso");
					this.OnbiensoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xe_Ghe", Storage="_Ghes", ThisKey="maxe", OtherKey="maxe")]
		public EntitySet<Ghe> Ghes
		{
			get
			{
				return this._Ghes;
			}
			set
			{
				this._Ghes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xe_Lotrinh", Storage="_Lotrinhs", ThisKey="maxe", OtherKey="maxe")]
		public EntitySet<Lotrinh> Lotrinhs
		{
			get
			{
				return this._Lotrinhs;
			}
			set
			{
				this._Lotrinhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ghes(Ghe entity)
		{
			this.SendPropertyChanging();
			entity.Xe = this;
		}
		
		private void detach_Ghes(Ghe entity)
		{
			this.SendPropertyChanging();
			entity.Xe = null;
		}
		
		private void attach_Lotrinhs(Lotrinh entity)
		{
			this.SendPropertyChanging();
			entity.Xe = this;
		}
		
		private void detach_Lotrinhs(Lotrinh entity)
		{
			this.SendPropertyChanging();
			entity.Xe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Taikhoan")]
	public partial class Taikhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _tendangnhap;
		
		private string _matkhau;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntendangnhapChanging(string value);
    partial void OntendangnhapChanged();
    partial void OnmatkhauChanging(string value);
    partial void OnmatkhauChanged();
    #endregion
		
		public Taikhoan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tendangnhap", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string tendangnhap
		{
			get
			{
				return this._tendangnhap;
			}
			set
			{
				if ((this._tendangnhap != value))
				{
					this.OntendangnhapChanging(value);
					this.SendPropertyChanging();
					this._tendangnhap = value;
					this.SendPropertyChanged("tendangnhap");
					this.OntendangnhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matkhau", DbType="NChar(10)")]
		public string matkhau
		{
			get
			{
				return this._matkhau;
			}
			set
			{
				if ((this._matkhau != value))
				{
					this.OnmatkhauChanging(value);
					this.SendPropertyChanging();
					this._matkhau = value;
					this.SendPropertyChanged("matkhau");
					this.OnmatkhauChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
